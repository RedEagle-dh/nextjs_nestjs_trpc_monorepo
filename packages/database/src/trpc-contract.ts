// @ts-nocheck 
// AUTOGENERATED FILE - DO NOT EDIT MANUALLY

import { createRouter as createGeneratedRouter } from './generated/routers';

import { z } from 'zod';
import type { TRPCContext } from '.';
import { createTRPCRouter, publicProcedure, protectedProcedure, mergeRouters } from './trpc';
export const customAppRouter = createTRPCRouter({
  healthcheck: createTRPCRouter({
    getHealthcheck: publicProcedure
      .input(z.string())
      .output(z.object({
			status: z.string(),
			timestamp: z.string(),
		}))
      .query(({ input, ctx }) => {
        return { "status": "PLACEHOLDER_STRING", "timestamp": "PLACEHOLDER_STRING" };
      }),
    mutateHealthcheck: publicProcedure
      .input(z.object({
			healthcheck: z.string(),
		}))
      .output(z.object({
			status: z.string(),
			timestamp: z.string(),
		}))
      .mutation(({ input, ctx }) => {
        return { "status": "PLACEHOLDER_STRING", "timestamp": "PLACEHOLDER_STRING" };
      }),
    protectedHealthcheck: protectedProcedure
      .input(z.object({
			healthcheck: z.string(),
		}))
      .output(z.object({
			status: z.string(),
			timestamp: z.string(),
		}))
      .mutation(({ input, ctx }) => {
        return { "status": "PLACEHOLDER_STRING", "timestamp": "PLACEHOLDER_STRING" };
      }),
  }),
});

const generatedRouter = createGeneratedRouter();

export const appRouter = mergeRouters(generatedRouter, customAppRouter);

export type AppRouter = typeof appRouter;
